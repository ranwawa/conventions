import{_ as a,c as e,o as s,a as n}from"./app.2bda0b56.js";const g=JSON.parse('{"title":"no-invalid-regexp","description":"","frontmatter":{},"headers":[{"level":3,"title":"为什么?","slug":"为什么","link":"#为什么","children":[]},{"level":3,"title":"错误示例","slug":"错误示例","link":"#错误示例","children":[]},{"level":3,"title":"正确示例","slug":"正确示例","link":"#正确示例","children":[]},{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"rules/script/javascript/no-invalid-regexp.md","lastUpdated":1676798319000}'),l={name:"rules/script/javascript/no-invalid-regexp.md"},t=n(`<h1 id="no-invalid-regexp" tabindex="-1">no-invalid-regexp <a class="header-anchor" href="#no-invalid-regexp" aria-hidden="true">#</a></h1><p>禁止在嵌套块中使用变量或函数声明</p><h3 id="为什么" tabindex="-1">为什么? <a class="header-anchor" href="#为什么" aria-hidden="true">#</a></h3><p>在 ES6 之前的 JavaScript 中，函数声明只允许出现在程序的第一级或另一个函数体中，尽管解析器有时会在其他地方错误地接受它们。这只适用于函数声明;命名或匿名函数表达式可以出现在表达式允许的任何地方。</p><h3 id="错误示例" tabindex="-1">错误示例 <a class="header-anchor" href="#错误示例" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (test) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">doSomething</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ERROR: &#39;named&#39; is readonly.</span></span>
<span class="line"></span></code></pre></div><h3 id="正确示例" tabindex="-1">正确示例 <a class="header-anchor" href="#正确示例" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">doSomething</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div><h3 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h3><ul><li><a href="https://eslint.org/docs/rules/no-invalid-regexp" target="_blank" rel="noreferrer">no-invalid-regexp</a></li></ul>`,10),i=[t];function o(r,p,c,d,h,_){return s(),e("div",null,i)}const y=a(l,[["render",o]]);export{g as __pageData,y as default};
