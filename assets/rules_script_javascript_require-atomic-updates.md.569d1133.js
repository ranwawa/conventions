import{_ as a,c as e,o as s,a as n}from"./app.71c7e370.js";const D=JSON.parse('{"title":"require-atomic-updates","description":"","frontmatter":{},"headers":[{"level":3,"title":"为什么?","slug":"为什么","link":"#为什么","children":[]},{"level":3,"title":"错误示例","slug":"错误示例","link":"#错误示例","children":[]},{"level":3,"title":"正确示例","slug":"正确示例","link":"#正确示例","children":[]},{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"rules/script/javascript/require-atomic-updates.md","lastUpdated":1676798319000}'),t={name:"rules/script/javascript/require-atomic-updates.md"},l=n(`<h1 id="require-atomic-updates" tabindex="-1">require-atomic-updates <a class="header-anchor" href="#require-atomic-updates" aria-hidden="true">#</a></h1><p>禁止在表达式中对左操作数求反</p><h3 id="为什么" tabindex="-1">为什么? <a class="header-anchor" href="#为什么" aria-hidden="true">#</a></h3><p>就像开发人员可能会输入-a + b 来表示负数-(a + b)一样，他们可能会错误地在 object 中输入!key 来测试键不在对象中。</p><h3 id="错误示例" tabindex="-1">错误示例 <a class="header-anchor" href="#错误示例" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">key </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> object) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// operator precedence makes it equivalent to (!key) in object</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// and type conversion makes it equivalent to (key ? &quot;false&quot; : &quot;true&quot;) in object</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="正确示例" tabindex="-1">正确示例 <a class="header-anchor" href="#正确示例" aria-hidden="true">#</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">(key </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> object)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// key is not in object</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h3><ul><li><a href="https://eslint.org/docs/rules/require-atomic-updates" target="_blank" rel="noreferrer">require-atomic-updates</a></li></ul>`,10),o=[l];function i(r,p,c,d,u,h){return s(),e("div",null,o)}const _=a(t,[["render",i]]);export{D as __pageData,_ as default};
