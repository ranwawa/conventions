import{_ as s,c as a,o as n,a as l}from"./app.81b55141.js";const h=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[{"level":2,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":2,"title":"初始化 commitlint 配置文件","slug":"初始化-commitlint-配置文件","link":"#初始化-commitlint-配置文件","children":[]},{"level":2,"title":"验证 commitlint 配置是否生效","slug":"验证-commitlint-配置是否生效","link":"#验证-commitlint-配置是否生效","children":[]},{"level":2,"title":"初始化 git-cz 配置文件","slug":"初始化-git-cz-配置文件","link":"#初始化-git-cz-配置文件","children":[]},{"level":2,"title":"添加 git-cz 命令","slug":"添加-git-cz-命令","link":"#添加-git-cz-命令","children":[]},{"level":2,"title":"验证 git-cz 是否配置成功","slug":"验证-git-cz-是否配置成功","link":"#验证-git-cz-是否配置成功","children":[]}],"relativePath":"guide/commit/quick-start.md","lastUpdated":1680915224000}'),e={name:"guide/commit/quick-start.md"},o=l(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-hidden="true">#</a></h1><p>统一 commit 工具及配置,可避因风格迥异的提交信息引起的阅读困难,语义化的提交信息能有效提高代码可阅读性,配合 cli 工具以及前端自动化,快速生成<code>更新日志</code>文件,可有效提升开发效率</p><p>采用业界流行的语义化提交信息风格 <a href="https://www.conventionalcommits.org/zh-hans/v1.0.0/#%e7%ba%a6%e5%ae%9a%e5%bc%8f%e6%8f%90%e4%ba%a4%e8%a7%84%e8%8c%83" target="_blank" rel="noreferrer">Angular Commit Guidelines</a> ,使用<a href="https://github.com/streamich/git-cz" target="_blank" rel="noreferrer">git-cz</a>进行模板化提交,通过<a href="https://commitlint.js.org/#/guides-local-setup" target="_blank" rel="noreferrer">commitlint</a>自动检验提交信息是否符合规范</p><h2 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a></h2><p>npm<code>7+</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">@ranwawa/configurations</span></span>
<span class="line"></span></code></pre></div><h2 id="初始化-commitlint-配置文件" tabindex="-1">初始化 commitlint 配置文件 <a class="header-anchor" href="#初始化-commitlint-配置文件" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module.exports = { extends: [&#39;@ranwawa/configurations/commitlint-config&#39;] };</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commitlint.config.js</span></span>
<span class="line"></span></code></pre></div><h2 id="验证-commitlint-配置是否生效" tabindex="-1">验证 commitlint 配置是否生效 <a class="header-anchor" href="#验证-commitlint-配置是否生效" aria-hidden="true">#</a></h2><p>提交一个标准的 commit 信息</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">package.json</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">build(root): 安装commitlint相关依赖</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commitlint</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--from</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HEAD~</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HEAD</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--verbose</span></span>
<span class="line"></span></code></pre></div><p>输出以下信息,表示配置生效</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">⧗</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">input:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">root</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">安装commitlint相关依赖</span></span>
<span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">found</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">problems,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">warnings</span></span>
<span class="line"></span></code></pre></div><h2 id="初始化-git-cz-配置文件" tabindex="-1">初始化 git-cz 配置文件 <a class="header-anchor" href="#初始化-git-cz-配置文件" aria-hidden="true">#</a></h2><p>每次提交信息时,按照标准格式手动输入 commit 信息( <code>feat(home): 巴拉巴拉巴拉</code>)比较繁琐 通过 git-cz 以模板的形式进行提交,可有效提高开发效率</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module.exports = require(&#39;@ranwawa/configurations/git-cz-config&#39;);</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">changelog.config.js</span></span>
<span class="line"></span></code></pre></div><h2 id="添加-git-cz-命令" tabindex="-1">添加 git-cz 命令 <a class="header-anchor" href="#添加-git-cz-命令" aria-hidden="true">#</a></h2><p>npm<code>7+</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set-script</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git-cz</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>手动添加到<code>package.json</code>文件中</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">commit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">git-cz</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="验证-git-cz-是否配置成功" tabindex="-1">验证 git-cz 是否配置成功 <a class="header-anchor" href="#验证-git-cz-是否配置成功" aria-hidden="true">#</a></h2><p>运行提交命令</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">changelog.config.js</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span></span>
<span class="line"></span></code></pre></div><p>输出以下信息,表示配置生效</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> Select the type of change that you</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">re committing: (Use arrow keys or type to search)</span></span>
<span class="line"><span style="color:#C3E88D;">❯ 🎸  feat:       新功能</span></span>
<span class="line"><span style="color:#C3E88D;">  🐛  fix:        bug修复</span></span>
<span class="line"><span style="color:#C3E88D;">  💍  test:       增加测试用例</span></span>
<span class="line"><span style="color:#C3E88D;">  💡  refactor:   重构代码(既不是新增功能也不是修复bug)</span></span>
<span class="line"><span style="color:#C3E88D;">  💄  style:      空格,格式化,分号,文字错误等不影响功能的修改</span></span>
<span class="line"><span style="color:#C3E88D;">  ️📖  docs:       注释,文档等无关代码的修改</span></span>
<span class="line"><span style="color:#C3E88D;">  🎡  build:      构建/持续集成相关的修改</span></span>
<span class="line"></span></code></pre></div>`,26),p=[o];function t(c,i,r,C,y,d){return n(),a("div",null,p)}const g=s(e,[["render",t]]);export{h as __pageData,g as default};
