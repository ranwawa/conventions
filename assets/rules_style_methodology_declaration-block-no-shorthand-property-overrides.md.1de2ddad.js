import{_ as a,c as e,o as s,a as n}from"./app.cc712e45.js";const u=JSON.parse('{"title":"declaration-block-no-shorthand-property-overrides","description":"","frontmatter":{},"headers":[{"level":3,"title":"为什么?","slug":"为什么","link":"#为什么","children":[]},{"level":3,"title":"错误示例","slug":"错误示例","link":"#错误示例","children":[]},{"level":3,"title":"正确示例","slug":"正确示例","link":"#正确示例","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"rules/style/methodology/declaration-block-no-shorthand-property-overrides.md","lastUpdated":1676798319000}'),l={name:"rules/style/methodology/declaration-block-no-shorthand-property-overrides.md"},o=n(`<h1 id="declaration-block-no-shorthand-property-overrides" tabindex="-1">declaration-block-no-shorthand-property-overrides <a class="header-anchor" href="#declaration-block-no-shorthand-property-overrides" aria-hidden="true">#</a></h1><p>禁止简写属性覆盖完整属性</p><h3 id="为什么" tabindex="-1">为什么? <a class="header-anchor" href="#为什么" aria-hidden="true">#</a></h3><p>明确的大于笼统的,明确的属性覆盖简写属性可以,但是反过来则容易产生 bug,请调整顺序把完整属性放在简写属性后面.</p><h3 id="错误示例" tabindex="-1">错误示例 <a class="header-anchor" href="#错误示例" aria-hidden="true">#</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">padding-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">padding</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="正确示例" tabindex="-1">正确示例 <a class="header-anchor" href="#正确示例" aria-hidden="true">#</a></h3><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">padding: 20px;</span></span>
<span class="line"><span style="color:#FFCB6B;">padding-left</span><span style="color:#A6ACCD;">: 0;</span></span>
<span class="line"></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><ul><li><a href="https://stylelint.io/user-guide/rules/list/declaration-block-no-shorthand-property-overrides" target="_blank" rel="noreferrer">declaration-block-no-shorthand-property-overrides</a></li></ul>`,10),r=[o];function t(p,c,i,d,h,y){return s(),e("div",null,r)}const _=a(l,[["render",t]]);export{u as __pageData,_ as default};
