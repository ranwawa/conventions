import{_ as s,c as a,o as l,a as e}from"./app.81b55141.js";const y=JSON.parse('{"title":"jsx-curly-spacing","description":"","frontmatter":{},"headers":[{"level":3,"title":"为什么?","slug":"为什么","link":"#为什么","children":[]},{"level":3,"title":"错误示例","slug":"错误示例","link":"#错误示例","children":[]},{"level":3,"title":"正确示例","slug":"正确示例","link":"#正确示例","children":[]},{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"rules/script/react/jsx-curly-spacing.md","lastUpdated":1676798319000}'),n={name:"rules/script/react/jsx-curly-spacing.md"},t=e(`<h1 id="jsx-curly-spacing" tabindex="-1">jsx-curly-spacing <a class="header-anchor" href="#jsx-curly-spacing" aria-hidden="true">#</a></h1><p>验证 jsx 中的结束标签位置</p><h3 id="为什么" tabindex="-1">为什么? <a class="header-anchor" href="#为什么" aria-hidden="true">#</a></h3><p>使代码更规范，此规则检查所有带有子元素（非自闭合）的 JSX 多行元素并验证结束标记的位置。期望是结束标签与开始标签在其自己的行上对齐。</p><h3 id="错误示例" tabindex="-1">错误示例 <a class="header-anchor" href="#错误示例" aria-hidden="true">#</a></h3><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Hello</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">marklar</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Hello</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="正确示例" tabindex="-1">正确示例 <a class="header-anchor" href="#正确示例" aria-hidden="true">#</a></h3><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Hello</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  marklar</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Hello</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Hello</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">marklar</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Hello</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h3><ul><li><a href="https://github.com/jsx-eslint/eslint-plugin-react/blob/c42b624d0fb9ad647583a775ab9751091eec066f/docs/rules/jsx-curly-spacing" target="_blank" rel="noreferrer">jsx-curly-spacing</a></li></ul>`,10),r=[t];function c(p,o,i,d,h,u){return l(),a("div",null,r)}const g=s(n,[["render",c]]);export{y as __pageData,g as default};
