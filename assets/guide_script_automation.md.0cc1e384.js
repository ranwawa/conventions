import{_ as s,c as a,o as n,a as l}from"./app.2bda0b56.js";const d=JSON.parse('{"title":"自动验证 commit 信息","description":"","frontmatter":{},"headers":[{"level":2,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":2,"title":"在 npm 生命周期中自动激活 husky","slug":"在-npm-生命周期中自动激活-husky","link":"#在-npm-生命周期中自动激活-husky","children":[]},{"level":2,"title":"手动激活 husky","slug":"手动激活-husky","link":"#手动激活-husky","children":[]},{"level":2,"title":"初始化 lint-staged 配置文件","slug":"初始化-lint-staged-配置文件","link":"#初始化-lint-staged-配置文件","children":[]},{"level":2,"title":"在 commit 前自动执行 eslint 命令","slug":"在-commit-前自动执行-eslint-命令","link":"#在-commit-前自动执行-eslint-命令","children":[]},{"level":2,"title":"验证 husky 配置是否生效","slug":"验证-husky-配置是否生效","link":"#验证-husky-配置是否生效","children":[]}],"relativePath":"guide/script/automation.md","lastUpdated":1684067665000}'),p={name:"guide/script/automation.md"},o=l(`<h1 id="自动验证-commit-信息" tabindex="-1">自动验证 commit 信息 <a class="header-anchor" href="#自动验证-commit-信息" aria-hidden="true">#</a></h1><p>通过<code>npm run lint:script</code>命令手动验证代码,比较繁琐,一次性验证所有代码也会引起心智负担,也不利于代码审查</p><p>可通过 <a href="https://github.com/typicode/husky" target="_blank" rel="noreferrer">husky</a> 配合 <a href="https://github.com/okonet/lint-staged" target="_blank" rel="noreferrer">lint-staged</a> 在每次提交信息(commit)之前,对当前更改的文件进行验证,减少重复的人工操作,避免一次验证所有代码引起的心智负担</p><h2 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a></h2><p>npm</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--save-dev</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">husky</span></span>
<span class="line"></span></code></pre></div><h2 id="在-npm-生命周期中自动激活-husky" tabindex="-1">在 npm 生命周期中自动激活 husky <a class="header-anchor" href="#在-npm-生命周期中自动激活-husky" aria-hidden="true">#</a></h2><p>npm<code>7+</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set-script</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prepare</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">husky install</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>手动添加到<code>package.json</code>文件中</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">prepare</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">husky install</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="手动激活-husky" tabindex="-1">手动激活 husky <a class="header-anchor" href="#手动激活-husky" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prepare</span></span>
<span class="line"></span></code></pre></div><h2 id="初始化-lint-staged-配置文件" tabindex="-1">初始化 lint-staged 配置文件 <a class="header-anchor" href="#初始化-lint-staged-配置文件" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{&quot;*.{js,jsx,ts,tsx}&quot;: &quot;eslint --fix&quot;}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.lintstagedrc</span></span>
<span class="line"></span></code></pre></div><h2 id="在-commit-前自动执行-eslint-命令" tabindex="-1">在 commit 前自动执行 eslint 命令 <a class="header-anchor" href="#在-commit-前自动执行-eslint-命令" aria-hidden="true">#</a></h2><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">husky</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.husky/pre-commit</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx lint-staged --allow-empty</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="验证-husky-配置是否生效" tabindex="-1">验证 husky 配置是否生效 <a class="header-anchor" href="#验证-husky-配置是否生效" aria-hidden="true">#</a></h2><p>创建一个临时的 js 文件,并提交到暂存区</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">const a = 1;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test-for-eslint.js</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test-for-eslint.js</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">build: 初始化lintstage配置文件</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test-for-eslint.js</span></span>
<span class="line"></span></code></pre></div><p>输出以下信息,表示配置生效</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Preparing</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">lint-staged...</span></span>
<span class="line"><span style="color:#FFCB6B;">❯</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Running</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tasks</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">staged</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">files...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">❯</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.lintstagedrc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">—</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">file</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">❯</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">*</span><span style="color:#C3E88D;">.{js,jsx,ts,tsx}</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">—</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">file</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#FFCB6B;">✖</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">eslint</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--fix</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">FAILED</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#FFCB6B;">↓</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Skipped</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">because</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">errors</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tasks.</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">SKIPPED</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Reverting</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">to</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">original</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">state</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">because</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">errors...</span></span>
<span class="line"><span style="color:#FFCB6B;">✔</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Cleaning</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">temporary</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">files...</span></span>
<span class="line"></span></code></pre></div>`,22),e=[o];function t(c,r,C,i,y,D){return n(),a("div",null,e)}const h=s(p,[["render",t]]);export{d as __pageData,h as default};
