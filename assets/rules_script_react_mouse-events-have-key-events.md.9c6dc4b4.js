import{_ as s,c as e,o as a,a as n}from"./app.71c7e370.js";const h=JSON.parse('{"title":"mouse-events-have-key-events","description":"","frontmatter":{},"headers":[{"level":3,"title":"错误示例","slug":"错误示例","link":"#错误示例","children":[]},{"level":3,"title":"正确示例","slug":"正确示例","link":"#正确示例","children":[]},{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"rules/script/react/mouse-events-have-key-events.md","lastUpdated":1676798319000}'),l={name:"rules/script/react/mouse-events-have-key-events.md"},t=n(`<h1 id="mouse-events-have-key-events" tabindex="-1">mouse-events-have-key-events <a class="header-anchor" href="#mouse-events-have-key-events" aria-hidden="true">#</a></h1><p>媒体元素必须有字幕</p><p>why?</p><p>为媒体提供字幕对于聋人用户来说至关重要。字幕应该是对话、音效、相关音乐提示和其他相关音频信息的转录或翻译。这不仅对可访问性很重要，而且在媒体不可用的情况下对所有用户也很有用（类似于 alt 无法加载图像时图像上的文本）</p><h3 id="错误示例" tabindex="-1">错误示例 <a class="header-anchor" href="#错误示例" aria-hidden="true">#</a></h3><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">audio</span><span style="color:#89DDFF;"> {...</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">} /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">video</span><span style="color:#89DDFF;"> {...</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">} /&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="正确示例" tabindex="-1">正确示例 <a class="header-anchor" href="#正确示例" aria-hidden="true">#</a></h3><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">audio</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">track</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">kind</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">captions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> {...</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">} /&gt;&lt;/</span><span style="color:#F07178;">audio</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">video</span><span style="color:#89DDFF;">&gt;&lt;</span><span style="color:#F07178;">track</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">kind</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">captions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> {...</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">} /&gt;&lt;/</span><span style="color:#F07178;">video</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">video</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">muted</span><span style="color:#89DDFF;"> {...</span><span style="color:#A6ACCD;">props</span><span style="color:#89DDFF;">} &gt;&lt;/</span><span style="color:#F07178;">video</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h3><ul><li><a href="https://github.com/jsx-eslint/eslint-plugin-react/blob/c42b624d0fb9ad647583a775ab9751091eec066f/docs/rules/mouse-events-have-key-events" target="_blank" rel="noreferrer">mouse-events-have-key-events</a></li></ul>`,10),o=[t];function p(r,c,i,F,D,d){return a(),e("div",null,o)}const u=s(l,[["render",p]]);export{h as __pageData,u as default};
