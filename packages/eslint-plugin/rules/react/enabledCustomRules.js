// 文件内容由代码自动生成,请勿修改
module.exports = {
  "@awawa/react/forbid-prop-types": [
    "error",
    {
      forbid: ["any", "array", "object"],
      checkContextTypes: true,
      checkChildContextTypes: true,
    },
  ],
  "@awawa/react/jsx-boolean-value": ["error", "never", { always: [] }],
  "@awawa/react/jsx-closing-bracket-location": ["error", "line-aligned"],
  "@awawa/react/jsx-closing-tag-location": "error",
  "@awawa/react/jsx-curly-spacing": [
    "error",
    "never",
    { allowMultiline: true },
  ],
  "@awawa/react/jsx-equals-spacing": ["error", "never"],
  "@awawa/react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
  "@awawa/react/jsx-indent-props": ["error", 2],
  "@awawa/react/jsx-indent": ["error", 2],
  "@awawa/react/jsx-max-props-per-line": [
    "error",
    { maximum: 1, when: "multiline" },
  ],
  "@awawa/react/jsx-no-bind": [
    "error",
    {
      ignoreRefs: true,
      allowArrowFunctions: false,
      allowFunctions: false,
      allowBind: false,
      ignoreDOMComponents: true,
    },
  ],
  "@awawa/react/jsx-no-duplicate-props": ["error", { ignoreCase: true }],
  "@awawa/react/jsx-no-target-blank": [
    "error",
    { enforceDynamicLinks: "always" },
  ],
  "@awawa/react/jsx-no-undef": "error",
  "@awawa/react/jsx-pascal-case": ["error", { allowAllCaps: true, ignore: [] }],
  "@awawa/react/jsx-uses-react": ["error"],
  "@awawa/react/jsx-uses-vars": "error",
  "@awawa/react/jsx-wrap-multilines": [
    "error",
    {
      declaration: "parens-new-line",
      assignment: "parens-new-line",
      return: "parens-new-line",
      arrow: "parens-new-line",
      condition: "parens-new-line",
      logical: "parens-new-line",
      prop: "parens-new-line",
    },
  ],
  "@awawa/react/no-danger": "warn",
  "@awawa/react/no-deprecated": ["error"],
  "@awawa/react/no-did-update-set-state": "error",
  "@awawa/react/no-is-mounted": "error",
  "@awawa/react/no-string-refs": "error",
  "@awawa/react/no-unknown-property": "error",
  "@awawa/react/no-will-update-set-state": "error",
  "@awawa/react/prefer-es6-class": ["error", "always"],
  "@awawa/react/prefer-stateless-function": [
    "error",
    { ignorePureComponents: true },
  ],
  "@awawa/react/prop-types": [
    "error",
    { ignore: [], customValidators: [], skipUndeclared: false },
  ],
  "@awawa/react/react-in-jsx-scope": "error",
  "@awawa/react/require-render-return": "error",
  "@awawa/react/self-closing-comp": "error",
  "@awawa/react/sort-comp": [
    "error",
    {
      order: [
        "static-variables",
        "static-methods",
        "instance-variables",
        "lifecycle",
        "/^handle.+$/",
        "/^on.+$/",
        "getters",
        "setters",
        "/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
        "instance-methods",
        "everything-else",
        "rendering",
      ],
      groups: {
        lifecycle: [
          "displayName",
          "propTypes",
          "contextTypes",
          "childContextTypes",
          "mixins",
          "statics",
          "defaultProps",
          "constructor",
          "getDefaultProps",
          "getInitialState",
          "state",
          "getChildContext",
          "getDerivedStateFromProps",
          "componentWillMount",
          "UNSAFE_componentWillMount",
          "componentDidMount",
          "componentWillReceiveProps",
          "UNSAFE_componentWillReceiveProps",
          "shouldComponentUpdate",
          "componentWillUpdate",
          "UNSAFE_componentWillUpdate",
          "getSnapshotBeforeUpdate",
          "componentDidUpdate",
          "componentDidCatch",
          "componentWillUnmount",
        ],
        rendering: ["/^render.+$/", "render"],
      },
    },
  ],
};
